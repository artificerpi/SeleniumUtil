import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.Iterator;

import org.apache.commons.io.FileUtils;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
	private static final String TMP_DIR_KEY = "java.io.tmpdir";
	private static final String SELENIUM_RELEASE_URL = "http://selenium-release.storage.googleapis.com/";
	private static final String CHROMEDRIVER_RELEASE_URL = "https://chromedriver.storage.googleapis.com/";

	private static final String SELENIUM_SERVER_FILENAME = "selenium-server-standalone.jar";
	private static final String CHROMEDRIVER_FILENAME = "chromedriver.zip";

	public void run() throws Exception {
//		downloadSelenium();
		downloadChromeDriver();
	}

	public Document parse(URL url) throws DocumentException {
		SAXReader reader = new SAXReader();
		Document document = reader.read(url);
		return document;
	}

	public void downloadSelenium() throws DocumentException, IOException {
		String fileName = "selenium.xml";

		String filePath = System.getProperty(TMP_DIR_KEY) + File.separator + fileName;
		File dstFile = new File(filePath);
		URL url = new URL(SELENIUM_RELEASE_URL);
		FileUtils.copyURLToFile(url, dstFile);
		Document doc = DocumentHelper.parseText(FileUtils.readFileToString(dstFile, Charset.defaultCharset()));

		Element root = doc.getRootElement();

		String latestVersion = null;
		String pattern = "^(\\d.\\d)/selenium-server-standalone-(\\d.\\d.\\d).jar$";
		for (Iterator<Element> it = root.elementIterator("Contents"); it.hasNext();) {
			Element foo = it.next();

			String foundName = foo.element("Key").getStringValue();
			if (foundName.matches(pattern)) {
				latestVersion = foundName;
			}
		}

		if (latestVersion == null) {
			System.out.println("Cannot find lastest version");
			return;
		}
		URL lastetFileURL = new URL(SELENIUM_RELEASE_URL + latestVersion);

		File downloadFile = new File(SELENIUM_SERVER_FILENAME);
		System.out.println("Downloading " + lastetFileURL.toString() + "...");
		FileUtils.copyURLToFile(lastetFileURL, downloadFile);
		System.out.println("Finish downloading file " + downloadFile.getAbsolutePath());
	}

	public void downloadChromeDriver() throws IOException {
		String fileName = "chromedriver_latest_version";
		String filePath = System.getProperty(TMP_DIR_KEY) + File.separator + fileName;
		URL latestReleaseURL = new URL(CHROMEDRIVER_RELEASE_URL + "LATEST_RELEASE");
		File latestVersionFile = new File(filePath);
		
		System.out.println("Downloading latest release version file: " + latestReleaseURL.toString());
		FileUtils.copyURLToFile(latestReleaseURL, latestVersionFile);
		System.out.println("finished");
		
		String latestVersion = FileUtils.readFileToString(latestVersionFile, Charset.defaultCharset());
		latestVersion = latestVersion.trim();
		System.out.println("Found latest version: " + latestVersion);
		// TODO os check here and download 
		//chromedriver_linux64.zip
		
		URL lastetFileURL = new URL(CHROMEDRIVER_RELEASE_URL + latestVersion + "/chromedriver_linux64.zip");

		File downloadFile = new File(CHROMEDRIVER_FILENAME);
		System.out.println("Downloading " + lastetFileURL.toString() + "...");
		FileUtils.copyURLToFile(lastetFileURL, downloadFile);
		System.out.println("Finish downloading file " + downloadFile.getAbsolutePath());

	}

	public static void main(String[] args) {
		System.out.println("Running");
		try {
			new App().run();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			System.out.println("Done!");
		}

	}

}
